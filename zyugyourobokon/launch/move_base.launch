<launch>
  <master auto="start"/>

  <!-- Run the map server -->
  <arg name="map_file" default="$(find my_robo_2dav)/map/map.yaml"/>
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

  <!--- Run AMCL -->
  <!--<include file="$(find amcl)/examples/amcl_diff.launch" />-->
    <node pkg="amcl" type="amcl" name="amcl" output="screen" args="/scan:=/scan">
    <!-- Publish scans from best pose at a max of 10 Hz -->

    <param name="odom_model_type" value="omni-corrected"/>
    <param name="odom_alpha1" value="0.1"/><!--オドメトリの直進成分がオドメトリの直進成分に与える誤差-->
    <param name="odom_alpha2" value="0.7"/><!--オドメトリの直進成分がオドメトリの回転成分に与える誤差-->
    <param name="odom_alpha3" value="0.1"/><!--オドメトリの回転成分がオドメトリの直進成分に与える誤差-->
    <param name="odom_alpha4" value="0.7"/><!--オドメトリの回転成分がオドメトリの回転成分に与える誤差-->
    <param name="odom_alpha5" value="0.1"/>

    <param name="transform_tolerance" value="0.2" />

    <param name="laser_max_beams" value="30"/><!--フィルタの更新時に各スキャンでどのように多くの等間隔のビームが使用される-->
    <param name="min_particles" value="100"/><!--粒子の最小許容数。-->
    <param name="max_particles" value="3000"/><!--粒子の最大許容数。-->

    <param name="kld_err" value="0.1"/><!--真の分布と推定分布の間の最大誤差。-->
    <param name="kld_z" value="0.99"/>

    <!-- translation std dev, m -->


    <param name="laser_z_hit" value="0.8"/><!--正しい値（障害物までの距離）を計測してくれる確率．-->
    <param name="laser_z_short" value="0.05"/><!--地図にはない障害物を検出して，正しい値より低い値を計測する確率．-->
    <param name="laser_z_max" value="0.05"/><!-- レーザの反射光を受信できない等の計測失敗により，計測値が計測可能レンジの最大値をとってしまう確率-->
    <param name="laser_z_rand" value="0.1"/><!--原因不明のランダムな雑音が発生する確率．-->


    <param name="laser_sigma_hit" value="0.2"/>
    <param name="laser_lambda_short" value="0.1"/>

    <param name="laser_model_type" value="likelihood_field"/>
    <!-- <param name="laser_model_type" value="beam"/> -->
    <param name="laser_likelihood_max_dist" value="2.0"/>



    <param name="update_min_d" value="0.005"/><!--フィルタのアップデートを実行する前に必要とされる並進運動。--> 
    <param name="update_min_a" value="0.02"/><!--フィルタのアップデートを実行する前に必要とされる回転運動。-->

    <param name="resample_interval" value="10"/><!--リサンプリング前に必要なフィルタ更新の数-->
   
    <param name="recovery_alpha_slow" value="0.0"/>
    <param name="recovery_alpha_fast" value="0.0"/>


    <param name="gui_publish_rate" value="10.0"/>
    <param name="odom_frame_id" value="odom"/>
  </node>




  <!--- Run Move Base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" args="/cmd_vel:=/sub">

    <rosparam file="$(find my_robo_2dav)/move_base_params.yaml" command="load" />
    <rosparam file="$(find my_robo_2dav)/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find my_robo_2dav)/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find my_robo_2dav)/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robo_2dav)/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find my_robo_2dav)/base_local_planner_params.yaml" command="load" />
  </node>

<node pkg="tf_listener" type="tf_listener_node" name="tf_listener" output="screen" />
</launch>
